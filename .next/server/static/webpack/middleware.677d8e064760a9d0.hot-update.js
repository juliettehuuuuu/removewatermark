"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("middleware",{

/***/ "(middleware)/./src/middleware.ts":
/*!***************************!*\
  !*** ./src/middleware.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   middleware: () => (/* binding */ middleware)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(middleware)/./node_modules/next/dist/esm/api/server.js\");\n\n// 简单的内存速率限制器 (生产环境建议使用Redis)\nconst rateLimitMap = new Map();\nfunction rateLimit(ip, limit = 10, windowMs = 60000) {\n    const now = Date.now();\n    const windowStart = now - windowMs;\n    const record = rateLimitMap.get(ip);\n    if (!record || record.lastReset < windowStart) {\n        rateLimitMap.set(ip, {\n            count: 1,\n            lastReset: now\n        });\n        return true;\n    }\n    if (record.count >= limit) {\n        return false;\n    }\n    record.count++;\n    return true;\n}\n// 🔐 安全检查函数\nfunction performSecurityChecks(request) {\n    const url = new URL(request.url);\n    const userAgent = request.headers.get('user-agent') || '';\n    // 检查可疑的User-Agent\n    const suspiciousUserAgents = [\n        /bot/i,\n        /crawler/i,\n        /spider/i,\n        /scraper/i,\n        /curl/i,\n        /wget/i\n    ];\n    if (suspiciousUserAgents.some((pattern)=>pattern.test(userAgent))) {\n        return {\n            allowed: false,\n            reason: 'Suspicious User-Agent'\n        };\n    }\n    // 检查路径遍历攻击\n    if (url.pathname.includes('..') || url.pathname.includes('\\\\')) {\n        return {\n            allowed: false,\n            reason: 'Path traversal attempt'\n        };\n    }\n    // 检查SQL注入模式\n    const sqlInjectionPatterns = [\n        /union.*select/i,\n        /drop.*table/i,\n        /insert.*into/i,\n        /delete.*from/i,\n        /update.*set/i\n    ];\n    if (sqlInjectionPatterns.some((pattern)=>pattern.test(url.pathname) || pattern.test(url.search))) {\n        return {\n            allowed: false,\n            reason: 'SQL injection attempt'\n        };\n    }\n    // 检查XSS攻击\n    const xssPatterns = [\n        /<script/i,\n        /javascript:/i,\n        /vbscript:/i,\n        /on\\w+\\s*=/i\n    ];\n    if (xssPatterns.some((pattern)=>pattern.test(url.pathname) || pattern.test(url.search))) {\n        return {\n            allowed: false,\n            reason: 'XSS attempt'\n        };\n    }\n    return {\n        allowed: true\n    };\n}\nfunction middleware(request) {\n    const { pathname } = request.nextUrl;\n    // 🔐 安全检查\n    const securityCheck = performSecurityChecks(request);\n    if (!securityCheck.allowed) {\n        console.log(`🔒 Security block: ${securityCheck.reason} from ${request.headers.get('x-forwarded-for') || 'unknown'}`);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: 'Request blocked for security reasons'\n        }, {\n            status: 403\n        });\n    }\n    // 强制HTTPS重定向 (生产环境)\n    if (false) {}\n    // API v1 路由重写 - 将文档中的API端点映射到实际实现\n    if (pathname.startsWith('/api/v1/')) {\n        let newPath = '/api/flux-kontext';\n        let action = '';\n        // 根据URL路径确定action类型\n        if (pathname.includes('/text-to-image/pro')) {\n            action = 'text-to-image-pro';\n        } else if (pathname.includes('/text-to-image/max')) {\n            action = 'edit-image-max';\n        } else if (pathname.includes('/image-edit/pro')) {\n            action = 'edit-image-pro';\n        } else if (pathname.includes('/image-edit/max')) {\n            action = 'edit-image-max';\n        }\n        // 创建新的URL并添加action参数\n        const url = request.nextUrl.clone();\n        url.pathname = newPath;\n        // 如果确定了action，添加到查询参数中\n        if (action) {\n            url.searchParams.set('action', action);\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.rewrite(url);\n    }\n    const response = next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.next();\n    // 添加安全头\n    response.headers.set('X-Frame-Options', 'DENY');\n    response.headers.set('X-Content-Type-Options', 'nosniff');\n    response.headers.set('Referrer-Policy', 'strict-origin-when-cross-origin');\n    response.headers.set('X-XSS-Protection', '1; mode=block');\n    response.headers.set('Strict-Transport-Security', 'max-age=31536000; includeSubDomains');\n    // 🔐 增强的内容安全策略\n    response.headers.set('Content-Security-Policy', \"default-src 'self'; \" + \"script-src 'self' 'unsafe-inline' 'unsafe-eval' \" + \"https://platform.twitter.com \" + \"https://www.googletagmanager.com \" + \"https://accounts.google.com \" + \"https://apis.google.com \" + \"https://www.gstatic.com \" + \"https://gstatic.com \" + \"https://challenges.cloudflare.com \" + \"https://static.cloudflareinsights.com \" + \"data: blob:; \" + \"style-src 'self' 'unsafe-inline' \" + \"https://fonts.googleapis.com \" + \"https://accounts.google.com \" + \"https://www.gstatic.com; \" + \"font-src 'self' \" + \"https://fonts.gstatic.com \" + \"https://accounts.google.com \" + \"data:; \" + \"img-src 'self' data: https: blob:; \" + \"connect-src 'self' https: \" + \"https://accounts.google.com \" + \"https://www.googleapis.com \" + \"https://challenges.cloudflare.com \" + \"wss: ws:; \" + \"frame-src 'self' \" + \"https://accounts.google.com \" + \"https://www.google.com \" + \"https://challenges.cloudflare.com; \" + \"object-src 'none'; \" + \"base-uri 'self'; \" + \"form-action 'self' https:; \" + \"frame-ancestors 'self'; \" + \"upgrade-insecure-requests;\");\n    // 🔐 添加更多安全头\n    response.headers.set('Permissions-Policy', 'camera=(), microphone=(), geolocation=()');\n    response.headers.set('X-DNS-Prefetch-Control', 'off');\n    // API路由速率限制 (仅在生产环境启用)\n    if (false) {}\n    // 🔐 记录可疑请求\n    const suspiciousPatterns = [\n        /\\.\\.\\//,\n        /<script/i,\n        /union.*select/i,\n        /javascript:/i,\n        /on\\w+\\s*=/i // 事件处理器\n    ];\n    const isSuspicious = suspiciousPatterns.some((pattern)=>pattern.test(pathname) || pattern.test(request.nextUrl.search));\n    if (isSuspicious) {\n        console.log(`🔒 Suspicious request detected: ${pathname} from ${request.headers.get('x-forwarded-for') || 'unknown'}`);\n    }\n    return response;\n}\nconst config = {\n    matcher: [\n        '/((?!_next/static|_next/image|favicon.ico).*)'\n    ]\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./src/middleware.ts\n");

/***/ })

});