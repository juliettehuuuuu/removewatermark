/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/remove-watermark/route";
exports.ids = ["app/api/remove-watermark/route"];
exports.modules = {

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fremove-watermark%2Froute&page=%2Fapi%2Fremove-watermark%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fremove-watermark%2Froute.ts&appDir=%2FUsers%2Ftutu%2FDesktop%2FBe%20a%20Developer%2Fmy-ai-tool-project%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Ftutu%2FDesktop%2FBe%20a%20Developer%2Fmy-ai-tool-project&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fremove-watermark%2Froute&page=%2Fapi%2Fremove-watermark%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fremove-watermark%2Froute.ts&appDir=%2FUsers%2Ftutu%2FDesktop%2FBe%20a%20Developer%2Fmy-ai-tool-project%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Ftutu%2FDesktop%2FBe%20a%20Developer%2Fmy-ai-tool-project&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_tutu_Desktop_Be_a_Developer_my_ai_tool_project_src_app_api_remove_watermark_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/remove-watermark/route.ts */ \"(rsc)/./src/app/api/remove-watermark/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/remove-watermark/route\",\n        pathname: \"/api/remove-watermark\",\n        filename: \"route\",\n        bundlePath: \"app/api/remove-watermark/route\"\n    },\n    resolvedPagePath: \"/Users/tutu/Desktop/Be a Developer/my-ai-tool-project/src/app/api/remove-watermark/route.ts\",\n    nextConfigOutput,\n    userland: _Users_tutu_Desktop_Be_a_Developer_my_ai_tool_project_src_app_api_remove_watermark_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIvaW5kZXguanM/bmFtZT1hcHAlMkZhcGklMkZyZW1vdmUtd2F0ZXJtYXJrJTJGcm91dGUmcGFnZT0lMkZhcGklMkZyZW1vdmUtd2F0ZXJtYXJrJTJGcm91dGUmYXBwUGF0aHM9JnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGcmVtb3ZlLXdhdGVybWFyayUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRnR1dHUlMkZEZXNrdG9wJTJGQmUlMjBhJTIwRGV2ZWxvcGVyJTJGbXktYWktdG9vbC1wcm9qZWN0JTJGc3JjJTJGYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj0lMkZVc2VycyUyRnR1dHUlMkZEZXNrdG9wJTJGQmUlMjBhJTIwRGV2ZWxvcGVyJTJGbXktYWktdG9vbC1wcm9qZWN0JmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUErRjtBQUN2QztBQUNxQjtBQUMyQztBQUN4SDtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IseUdBQW1CO0FBQzNDO0FBQ0EsY0FBYyxrRUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLHNEQUFzRDtBQUM5RDtBQUNBLFdBQVcsNEVBQVc7QUFDdEI7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUMwRjs7QUFFMUYiLCJzb3VyY2VzIjpbIiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBSb3V0ZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvcm91dGUtbW9kdWxlcy9hcHAtcm91dGUvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBwYXRjaEZldGNoIGFzIF9wYXRjaEZldGNoIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvbGliL3BhdGNoLWZldGNoXCI7XG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiL1VzZXJzL3R1dHUvRGVza3RvcC9CZSBhIERldmVsb3Blci9teS1haS10b29sLXByb2plY3Qvc3JjL2FwcC9hcGkvcmVtb3ZlLXdhdGVybWFyay9yb3V0ZS50c1wiO1xuLy8gV2UgaW5qZWN0IHRoZSBuZXh0Q29uZmlnT3V0cHV0IGhlcmUgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW4gdGhlIHJvdXRlXG4vLyBtb2R1bGUuXG5jb25zdCBuZXh0Q29uZmlnT3V0cHV0ID0gXCJcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvcmVtb3ZlLXdhdGVybWFyay9yb3V0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL3JlbW92ZS13YXRlcm1hcmtcIixcbiAgICAgICAgZmlsZW5hbWU6IFwicm91dGVcIixcbiAgICAgICAgYnVuZGxlUGF0aDogXCJhcHAvYXBpL3JlbW92ZS13YXRlcm1hcmsvcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCIvVXNlcnMvdHV0dS9EZXNrdG9wL0JlIGEgRGV2ZWxvcGVyL215LWFpLXRvb2wtcHJvamVjdC9zcmMvYXBwL2FwaS9yZW1vdmUtd2F0ZXJtYXJrL3JvdXRlLnRzXCIsXG4gICAgbmV4dENvbmZpZ091dHB1dCxcbiAgICB1c2VybGFuZFxufSk7XG4vLyBQdWxsIG91dCB0aGUgZXhwb3J0cyB0aGF0IHdlIG5lZWQgdG8gZXhwb3NlIGZyb20gdGhlIG1vZHVsZS4gVGhpcyBzaG91bGRcbi8vIGJlIGVsaW1pbmF0ZWQgd2hlbiB3ZSd2ZSBtb3ZlZCB0aGUgb3RoZXIgcm91dGVzIHRvIHRoZSBuZXcgZm9ybWF0LiBUaGVzZVxuLy8gYXJlIHVzZWQgdG8gaG9vayBpbnRvIHRoZSByb3V0ZS5cbmNvbnN0IHsgd29ya0FzeW5jU3RvcmFnZSwgd29ya1VuaXRBc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzIH0gPSByb3V0ZU1vZHVsZTtcbmZ1bmN0aW9uIHBhdGNoRmV0Y2goKSB7XG4gICAgcmV0dXJuIF9wYXRjaEZldGNoKHtcbiAgICAgICAgd29ya0FzeW5jU3RvcmFnZSxcbiAgICAgICAgd29ya1VuaXRBc3luY1N0b3JhZ2VcbiAgICB9KTtcbn1cbmV4cG9ydCB7IHJvdXRlTW9kdWxlLCB3b3JrQXN5bmNTdG9yYWdlLCB3b3JrVW5pdEFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIHBhdGNoRmV0Y2gsICB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcm91dGUuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fremove-watermark%2Froute&page=%2Fapi%2Fremove-watermark%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fremove-watermark%2Froute.ts&appDir=%2FUsers%2Ftutu%2FDesktop%2FBe%20a%20Developer%2Fmy-ai-tool-project%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Ftutu%2FDesktop%2FBe%20a%20Developer%2Fmy-ai-tool-project&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(rsc)/./src/app/api/remove-watermark/route.ts":
/*!***********************************************!*\
  !*** ./src/app/api/remove-watermark/route.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_replicate__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/replicate */ \"(rsc)/./src/lib/replicate.ts\");\n/* harmony import */ var next_auth__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next-auth */ \"(rsc)/./node_modules/next-auth/index.js\");\n/* harmony import */ var next_auth__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_auth__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _lib_auth__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/auth */ \"(rsc)/./src/lib/auth.ts\");\n/* harmony import */ var _lib_security_input_validation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/lib/security/input-validation */ \"(rsc)/./src/lib/security/input-validation.ts\");\n/* harmony import */ var _lib_utils_error_handler__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/lib/utils/error-handler */ \"(rsc)/./src/lib/utils/error-handler.ts\");\n\n\n\n\n\n\n// 内存中简单存储用户每日调用次数（生产环境建议用数据库）\nconst userUsageMap = new Map();\nconst DAILY_LIMIT = 10;\n// 从请求中获取客户端IP的辅助函数\nasync function getClientIpFromRequest(req) {\n    try {\n        const forwardedFor = req.headers.get('x-forwarded-for');\n        const realIp = req.headers.get('x-real-ip');\n        const cfConnectingIp = req.headers.get('cf-connecting-ip');\n        const xClientIp = req.headers.get('x-client-ip');\n        if (cfConnectingIp) return cfConnectingIp;\n        if (realIp) return realIp;\n        if (forwardedFor) return forwardedFor.split(',')[0].trim();\n        if (xClientIp) return xClientIp;\n        return 'unknown';\n    } catch  {\n        return 'unknown';\n    }\n}\n// 安全检查中间件\nfunction createSecurityMiddleware() {\n    return {\n        validateHeaders: (req)=>{\n            const headers = req.headers;\n            // 检查Content-Type\n            const contentType = headers.get('content-type');\n            if (contentType && !contentType.includes('multipart/form-data')) {\n                return {\n                    isValid: false,\n                    error: '只支持multipart/form-data格式'\n                };\n            }\n            // 检查User-Agent\n            const userAgent = headers.get('user-agent');\n            if (!userAgent || userAgent.length > 500) {\n                return {\n                    isValid: false,\n                    error: '无效的User-Agent'\n                };\n            }\n            // 检查请求大小\n            const contentLength = headers.get('content-length');\n            if (contentLength && parseInt(contentLength) > 10 * 1024 * 1024) {\n                return {\n                    isValid: false,\n                    error: '请求体过大'\n                };\n            }\n            return {\n                isValid: true\n            };\n        }\n    };\n}\n// 去水印API路由，POST方法，接收图片并返回处理后图片URL\nasync function POST(req) {\n    try {\n        // 🔐 安全检查：验证请求头\n        const securityMiddleware = createSecurityMiddleware();\n        const headerValidation = securityMiddleware.validateHeaders(req);\n        if (!headerValidation.isValid) {\n            (0,_lib_utils_error_handler__WEBPACK_IMPORTED_MODULE_5__.logSecurityEvent)('invalid_headers', {\n                error: headerValidation.error,\n                ip: await getClientIpFromRequest(req),\n                path: '/api/remove-watermark'\n            });\n            return (0,_lib_utils_error_handler__WEBPACK_IMPORTED_MODULE_5__.createErrorResponse)(headerValidation.error, 400, req);\n        }\n        // 登录校验\n        const session = await (0,next_auth__WEBPACK_IMPORTED_MODULE_2__.getServerSession)(_lib_auth__WEBPACK_IMPORTED_MODULE_3__.authOptions);\n        if (!session || !session.user?.email) {\n            (0,_lib_utils_error_handler__WEBPACK_IMPORTED_MODULE_5__.logSecurityEvent)('unauthorized_access', {\n                path: '/api/remove-watermark',\n                ip: await getClientIpFromRequest(req)\n            });\n            return (0,_lib_utils_error_handler__WEBPACK_IMPORTED_MODULE_5__.createErrorResponse)('Not authenticated', 401, req);\n        }\n        const userId = session.user.email;\n        // 🔐 安全检查：记录用户活动\n        (0,_lib_utils_error_handler__WEBPACK_IMPORTED_MODULE_5__.logSecurityEvent)('api_access', {\n            userId,\n            endpoint: '/api/remove-watermark',\n            ip: await getClientIpFromRequest(req)\n        });\n        // 使用限制检查\n        const today = new Date().toISOString().slice(0, 10);\n        const usage = userUsageMap.get(userId);\n        if (!usage || usage.date !== today) {\n            userUsageMap.set(userId, {\n                date: today,\n                count: 1\n            });\n        } else if (usage.count >= DAILY_LIMIT) {\n            (0,_lib_utils_error_handler__WEBPACK_IMPORTED_MODULE_5__.logSecurityEvent)('rate_limit_exceeded', {\n                userId,\n                endpoint: '/api/remove-watermark',\n                currentCount: usage.count,\n                limit: DAILY_LIMIT\n            });\n            return (0,_lib_utils_error_handler__WEBPACK_IMPORTED_MODULE_5__.createErrorResponse)('Daily free limit reached', 429, req);\n        } else {\n            usage.count++;\n            userUsageMap.set(userId, usage);\n        }\n        // 解析FormData获取图片\n        const formData = await req.formData();\n        const file = formData.get('image');\n        if (!file) {\n            return (0,_lib_utils_error_handler__WEBPACK_IMPORTED_MODULE_5__.createErrorResponse)('No image uploaded', 400, req);\n        }\n        // 🔐 安全检查：文件验证\n        try {\n            // 1. 验证文件名\n            if (!(0,_lib_security_input_validation__WEBPACK_IMPORTED_MODULE_4__.validateFileName)(file.name)) {\n                (0,_lib_utils_error_handler__WEBPACK_IMPORTED_MODULE_5__.logSecurityEvent)('suspicious_filename', {\n                    userId,\n                    filename: file.name,\n                    ip: await getClientIpFromRequest(req)\n                });\n                throw new _lib_utils_error_handler__WEBPACK_IMPORTED_MODULE_5__.FileUploadError('文件名包含危险字符', file.name);\n            }\n            // 2. 验证文件类型和大小\n            const fileValidation = (0,_lib_security_input_validation__WEBPACK_IMPORTED_MODULE_4__.validateInput)(file, _lib_security_input_validation__WEBPACK_IMPORTED_MODULE_4__.fileSchema);\n            if (!fileValidation.isValid) {\n                (0,_lib_utils_error_handler__WEBPACK_IMPORTED_MODULE_5__.logSecurityEvent)('invalid_file_upload', {\n                    userId,\n                    filename: file.name,\n                    errors: fileValidation.errors,\n                    ip: await getClientIpFromRequest(req)\n                });\n                throw new _lib_utils_error_handler__WEBPACK_IMPORTED_MODULE_5__.FileUploadError(`文件验证失败: ${fileValidation.errors.join(', ')}`, file.name);\n            }\n            // 3. 验证文件内容\n            const buffer = await file.arrayBuffer();\n            if (!(0,_lib_security_input_validation__WEBPACK_IMPORTED_MODULE_4__.validateImageData)(buffer)) {\n                (0,_lib_utils_error_handler__WEBPACK_IMPORTED_MODULE_5__.logSecurityEvent)('invalid_image_content', {\n                    userId,\n                    filename: file.name,\n                    size: buffer.byteLength,\n                    ip: await getClientIpFromRequest(req)\n                });\n                throw new _lib_utils_error_handler__WEBPACK_IMPORTED_MODULE_5__.FileUploadError('无效的图片文件内容', file.name);\n            }\n        } catch (error) {\n            if (error instanceof _lib_utils_error_handler__WEBPACK_IMPORTED_MODULE_5__.FileUploadError) {\n                return (0,_lib_utils_error_handler__WEBPACK_IMPORTED_MODULE_5__.createErrorResponse)(error.message, 400, req);\n            }\n            throw error;\n        }\n        // 调用AI处理\n        const resultUrl = await (0,_lib_replicate__WEBPACK_IMPORTED_MODULE_1__.callReplicateAPI)('remove', file);\n        // 🔐 安全检查：记录成功处理\n        (0,_lib_utils_error_handler__WEBPACK_IMPORTED_MODULE_5__.logSecurityEvent)('image_processed_successfully', {\n            userId,\n            filename: file.name,\n            fileSize: file.size,\n            resultUrl: resultUrl.substring(0, 50) + '...' // 只记录URL前缀\n        });\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            resultUrl,\n            remaining: DAILY_LIMIT - userUsageMap.get(userId).count\n        });\n    } catch (error) {\n        // 🔐 安全检查：记录错误\n        (0,_lib_utils_error_handler__WEBPACK_IMPORTED_MODULE_5__.logSecurityEvent)('api_error', {\n            endpoint: '/api/remove-watermark',\n            error: error instanceof Error ? error.message : String(error),\n            ip: await getClientIpFromRequest(req)\n        });\n        if (error instanceof _lib_utils_error_handler__WEBPACK_IMPORTED_MODULE_5__.FileUploadError) {\n            return (0,_lib_utils_error_handler__WEBPACK_IMPORTED_MODULE_5__.createErrorResponse)(error.message, 400, req);\n        }\n        return (0,_lib_utils_error_handler__WEBPACK_IMPORTED_MODULE_5__.createErrorResponse)(error instanceof Error ? error.message : 'Internal server error', 500, req);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/remove-watermark/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/auth.ts":
/*!*************************!*\
  !*** ./src/lib/auth.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   authOptions: () => (/* binding */ authOptions),\n/* harmony export */   providerMap: () => (/* binding */ providerMap)\n/* harmony export */ });\n/* harmony import */ var next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next-auth/providers/credentials */ \"(rsc)/./node_modules/next-auth/providers/credentials.js\");\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @supabase/supabase-js */ \"(rsc)/./node_modules/@supabase/supabase-js/dist/module/index.js\");\n\n\nconst providers = [];\n// Google Auth (如果配置了)\n// 已移除\n// Github Auth (如果配置了)\n// 已移除\n// 🔥 简化的邮箱登录 - 只使用Supabase认证\nif (true) {\n    providers.push((0,next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n        id: \"credentials\",\n        name: \"credentials\",\n        credentials: {\n            email: {\n                label: \"Email\",\n                type: \"email\"\n            },\n            password: {\n                label: \"Password\",\n                type: \"password\"\n            }\n        },\n        async authorize (credentials) {\n            if (!credentials?.email || !credentials?.password) {\n                return null;\n            }\n            // 🎯 开发环境测试账户（无需数据库）\n            if ( true && credentials.email === \"test@example.com\" && credentials.password === \"password\") {\n                return {\n                    id: \"test-user-id\",\n                    email: \"test@example.com\",\n                    name: \"Test User\"\n                };\n            }\n            // 🚀 生产环境：使用Supabase认证（自带邮箱验证）\n            try {\n                console.log('🔍 开始Supabase登录验证:', credentials.email);\n                const supabase = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_1__.createClient)(\"https://pyppocnuyvkhyvcfrpmn.supabase.co\", \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InB5cHBvY251eXZraHl2Y2ZycG1uIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTAzMzUzMjksImV4cCI6MjA2NTkxMTMyOX0.2Y9CP3G8LpORWxeurajXRcCY7mRfESkjeaxFQ7kRgeQ\");\n                console.log('🔍 Supabase客户端创建成功');\n                // 🔐 Supabase登录验证（自动检查邮箱验证状态）\n                const { data, error } = await supabase.auth.signInWithPassword({\n                    email: credentials.email,\n                    password: credentials.password\n                });\n                console.log('🔍 Supabase登录结果:', {\n                    success: !error,\n                    error: error?.message,\n                    userExists: !!data?.user,\n                    userId: data?.user?.id\n                });\n                if (error) {\n                    // 如果是邮箱未验证错误，在开发环境下允许登录\n                    if (error.message === 'Email not confirmed' && \"development\" === 'development') {\n                        console.log('🔧 开发环境：允许未验证邮箱的用户登录');\n                        // 尝试手动确认邮箱\n                        try {\n                            const adminSupabase = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_1__.createClient)(\"https://pyppocnuyvkhyvcfrpmn.supabase.co\", process.env.SUPABASE_SERVICE_ROLE_KEY);\n                            // 先查询用户ID\n                            const { data: userData } = await adminSupabase.auth.admin.listUsers();\n                            const targetUser = userData.users.find((u)=>u.email === credentials.email);\n                            if (targetUser) {\n                                const { error: confirmError } = await adminSupabase.auth.admin.updateUserById(targetUser.id, {\n                                    email_confirm: true\n                                });\n                                if (!confirmError) {\n                                    console.log('✅ 邮箱确认成功，允许登录');\n                                    return {\n                                        id: targetUser.id,\n                                        email: credentials.email,\n                                        name: targetUser.user_metadata?.name || credentials.email\n                                    };\n                                }\n                            }\n                        } catch (confirmErr) {\n                            console.error('❌ 邮箱确认失败:', confirmErr);\n                        }\n                    }\n                    console.log('❌ 登录失败:', error.message);\n                    return null;\n                }\n                if (!data.user) {\n                    console.log('❌ 用户不存在');\n                    return null;\n                }\n                console.log('✅ 登录成功，返回用户信息');\n                // 🎉 登录成功\n                return {\n                    id: data.user.id,\n                    email: data.user.email,\n                    name: data.user.user_metadata?.name || data.user.email\n                };\n            } catch (error) {\n                console.error('❌ Supabase认证异常:', error);\n                return null;\n            }\n        }\n    }));\n}\nconst providerMap = providers.map((provider)=>{\n    if (typeof provider === \"function\") {\n        const providerData = provider();\n        return {\n            id: providerData.id,\n            name: providerData.name\n        };\n    } else {\n        return {\n            id: provider.id,\n            name: provider.name\n        };\n    }\n});\nconst authOptions = {\n    providers,\n    pages: {\n        signIn: \"/auth/signin\"\n    },\n    // 🍪 Cookie安全配置 - 优化以支持Google One Tap\n    cookies: {\n        sessionToken: {\n            name: `next-auth.session-token`,\n            options: {\n                httpOnly: true,\n                sameSite: 'lax',\n                path: '/',\n                secure: \"development\" === 'production',\n                domain:  false ? 0 : undefined\n            }\n        },\n        callbackUrl: {\n            name: `next-auth.callback-url`,\n            options: {\n                sameSite: 'lax',\n                path: '/',\n                secure: \"development\" === 'production',\n                domain:  false ? 0 : undefined\n            }\n        },\n        csrfToken: {\n            name: `next-auth.csrf-token`,\n            options: {\n                httpOnly: true,\n                sameSite: 'lax',\n                path: '/',\n                secure: \"development\" === 'production',\n                domain:  false ? 0 : undefined\n            }\n        },\n        // 🔧 添加状态Cookie配置以支持Google One Tap\n        state: {\n            name: `next-auth.state`,\n            options: {\n                httpOnly: true,\n                sameSite: 'lax',\n                path: '/',\n                secure: \"development\" === 'production',\n                maxAge: 900,\n                domain:  false ? 0 : undefined\n            }\n        },\n        pkceCodeVerifier: {\n            name: `next-auth.pkce.code_verifier`,\n            options: {\n                httpOnly: true,\n                sameSite: 'lax',\n                path: '/',\n                secure: \"development\" === 'production',\n                maxAge: 900,\n                domain:  false ? 0 : undefined\n            }\n        }\n    },\n    callbacks: {\n        async signIn ({ user, account, profile }) {\n            // 🎯 处理用户登录和首次注册赠送积分\n            console.log('🔍 signIn回调触发:', {\n                user: user,\n                account: account?.provider,\n                profile: profile?.email\n            });\n            try {\n                if (user?.email) {\n                    console.log('🔍 开始处理用户:', user.email);\n                    // 🔧 使用Supabase替代Prisma，确保数据库访问一致性\n                    const { createAdminClient } = await Promise.all(/*! import() */[__webpack_require__.e(\"vendor-chunks/@supabase\"), __webpack_require__.e(\"_rsc_src_lib_supabase_server_ts\")]).then(__webpack_require__.bind(__webpack_require__, /*! @/lib/supabase/server */ \"(rsc)/./src/lib/supabase/server.ts\"));\n                    const { getUuid } = await Promise.all(/*! import() */[__webpack_require__.e(\"vendor-chunks/uuid\"), __webpack_require__.e(\"_rsc_src_lib_utils_hash_ts\")]).then(__webpack_require__.bind(__webpack_require__, /*! @/lib/utils/hash */ \"(rsc)/./src/lib/utils/hash.ts\"));\n                    console.log('🔍 Supabase模块导入成功');\n                    const supabase = createAdminClient();\n                    // 检查用户是否已存在\n                    console.log('🔍 查询现有用户...');\n                    const { data: existingUser, error: findError } = await supabase.from('users').select('*').eq('email', user.email).limit(1).single();\n                    console.log('🔍 查询结果:', existingUser ? '用户已存在' : '用户不存在');\n                    if (findError && findError.code === 'PGRST116') {\n                        // 用户不存在，创建新用户\n                        console.log('🎁 开始创建新用户...');\n                        const newUserData = {\n                            id: user.id || getUuid(),\n                            email: user.email,\n                            name: user.name || user.email,\n                            image: user.image || '',\n                            credits: 100,\n                            signin_type: account?.type || 'oauth',\n                            signin_provider: account?.provider || 'google',\n                            signin_openid: account?.providerAccountId || '',\n                            signin_ip: 'unknown',\n                            last_signin_at: new Date().toISOString(),\n                            signin_count: 1,\n                            location: 'US',\n                            preferred_currency: 'USD',\n                            preferred_payment_provider: 'creem'\n                        };\n                        const { data: newUser, error: createError } = await supabase.from('users').insert(newUserData).select().single();\n                        if (createError) {\n                            console.error('🚨 新用户创建失败:', createError);\n                        // 即使创建失败，也允许用户登录，后续通过API自动创建\n                        } else {\n                            console.log('🎉 新用户创建成功:', newUser.id);\n                            // 🎁 创建积分赠送记录\n                            try {\n                                await supabase.from('credit_transactions').insert({\n                                    id: getUuid(),\n                                    user_id: newUser.id,\n                                    amount: 100,\n                                    type: 'gift',\n                                    description: '新用户注册赠送积分',\n                                    reference_id: 'welcome_bonus'\n                                });\n                                console.log(`🎁 新用户注册成功，赠送100积分: ${user.email}`);\n                            } catch (creditError) {\n                                console.error('⚠️ 积分记录创建失败:', creditError);\n                            }\n                        }\n                    } else if (!findError && existingUser) {\n                        console.log('🔄 更新现有用户登录信息...');\n                        // 🔄 现有用户：更新登录信息\n                        const updateData = {\n                            last_signin_at: new Date().toISOString(),\n                            signin_count: (existingUser.signin_count || 0) + 1,\n                            // 更新头像和昵称（如果有变化）\n                            ...user.image && {\n                                image: user.image\n                            },\n                            ...user.name && {\n                                name: user.name\n                            }\n                        };\n                        await supabase.from('users').update(updateData).eq('id', existingUser.id);\n                        console.log('✅ 现有用户登录信息更新完成');\n                    } else {\n                        console.error('🚨 数据库查询异常:', findError);\n                    }\n                } else {\n                    console.log('⚠️ 用户邮箱为空，跳过数据库操作');\n                }\n            } catch (error) {\n                console.error('❌ 用户登录处理失败:', error);\n            // 即使数据库操作失败，也允许用户登录\n            }\n            console.log('✅ signIn回调完成，返回true');\n            return true;\n        },\n        async redirect ({ url, baseUrl }) {\n            // 🎯 修改重定向逻辑 - 优先跳转到tool页面（AI图像去水印工具）\n            // 如果URL包含callbackUrl参数，使用该参数\n            if (url.includes('callbackUrl=')) {\n                const urlParams = new URLSearchParams(url.split('?')[1]);\n                const callbackUrl = urlParams.get('callbackUrl');\n                if (callbackUrl) {\n                    // 解码callbackUrl\n                    const decodedCallback = decodeURIComponent(callbackUrl);\n                    if (decodedCallback.startsWith(\"/\")) return `${baseUrl}${decodedCallback}`;\n                    else if (new URL(decodedCallback).origin === baseUrl) return decodedCallback;\n                }\n            }\n            // 如果是相对路径，添加baseUrl\n            if (url.startsWith(\"/\")) return `${baseUrl}${url}`;\n            // 如果是同域名的完整URL，直接返回\n            if (new URL(url).origin === baseUrl) return url;\n            // 🎯 默认跳转到tool页面（AI图像去水印工具）\n            return `${baseUrl}/tool`;\n        },\n        async session ({ session, token }) {\n            // 🎯 会话信息处理\n            return session;\n        },\n        async jwt ({ token, user, account }) {\n            // 🎯 JWT token 处理\n            if (user) {\n                token.user = user;\n            }\n            return token;\n        }\n    }\n};\n// 检测用户地理位置的函数\nasync function detectUserLocation() {\n    try {\n        // 这里可以使用IP地理位置检测服务\n        // 暂时返回默认值，实际项目中可以集成 ipapi.co 等服务\n        return \"US\" // 默认为美国\n        ;\n    } catch (error) {\n        console.error(\"地理位置检测失败:\", error);\n        return \"US\";\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/auth.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/replicate.ts":
/*!******************************!*\
  !*** ./src/lib/replicate.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   callReplicateAPI: () => (/* binding */ callReplicateAPI)\n/* harmony export */ });\n// 该文件封装与Replicate API的真实交互逻辑，支持不同功能调用不同模型\n// 通过环境变量安全读取API Token\nconst REPLICATE_API_TOKEN = process.env.REPLICATE_API_TOKEN;\n// Replicate模型配置，按功能区分\nconst models = {\n    remove: {\n        // flux-kontext-apps/text-removal\n        version: \"e28636410bff2b083e38f4e856a5b2be171c8bb6636f527b1a9e84dff29d1c54\",\n        modelInput: (base64)=>({\n                input_image: `data:image/png;base64,${base64}`\n            })\n    },\n    enhance: {\n        // flux-kontext-apps/restore-image\n        version: \"85ae46551612b8f778348846b6ce1ce1b340e384fe2062399c0c412be29e107d\",\n        modelInput: (base64)=>({\n                input_image: `data:image/png;base64,${base64}`\n            })\n    }\n};\n// 通用AI图片处理函数\nasync function callReplicateAPI(action, file) {\n    if (!REPLICATE_API_TOKEN) {\n        console.log('⚠️ Replicate API token not set, using mock processing for development');\n        // 开发环境：模拟处理，返回原图\n        return new Promise((resolve)=>{\n            const reader = new FileReader();\n            reader.onload = ()=>{\n                // 返回原图的 data URL\n                resolve(reader.result);\n            };\n            reader.readAsDataURL(file);\n        });\n    }\n    const model = models[action];\n    if (!model) throw new Error('Unknown action');\n    // 读取图片为base64\n    const arrayBuffer = await file.arrayBuffer();\n    const base64 = Buffer.from(arrayBuffer).toString('base64');\n    // 调试日志：打印模型和请求体\n    console.log('[Replicate] 调用模型:', model.version);\n    console.log('[Replicate] 请求input:', model.modelInput(base64));\n    // 1. 创建预测任务\n    const res = await fetch('https://api.replicate.com/v1/predictions', {\n        method: 'POST',\n        headers: {\n            'Authorization': `Token ${REPLICATE_API_TOKEN}`,\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            version: model.version,\n            input: model.modelInput(base64)\n        })\n    });\n    if (!res.ok) {\n        const err = await res.text();\n        console.error('[Replicate] 创建预测失败:', err);\n        throw new Error('Failed to create prediction: ' + err);\n    }\n    const data = await res.json();\n    let prediction = data;\n    // 2. 轮询获取结果\n    while(prediction.status !== 'succeeded' && prediction.status !== 'failed'){\n        await new Promise((r)=>setTimeout(r, 1500));\n        const pollRes = await fetch(`https://api.replicate.com/v1/predictions/${prediction.id}`, {\n            headers: {\n                'Authorization': `Token ${REPLICATE_API_TOKEN}`\n            }\n        });\n        prediction = await pollRes.json();\n        console.log('[Replicate] 轮询状态:', prediction.status);\n    }\n    if (prediction.status === 'succeeded') {\n        // 返回图片URL（部分模型为数组，部分为字符串）\n        console.log('[Replicate] 处理成功，输出:', prediction.output);\n        if (Array.isArray(prediction.output)) return prediction.output[0];\n        return prediction.output;\n    }\n    console.error('[Replicate] 处理失败:', prediction.error || prediction);\n    throw new Error('Replicate AI failed: ' + (prediction.error || 'Unknown error'));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL3JlcGxpY2F0ZS50cyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsMENBQTBDO0FBQzFDLHNCQUFzQjtBQUV0QixNQUFNQSxzQkFBc0JDLFFBQVFDLEdBQUcsQ0FBQ0YsbUJBQW1CO0FBRTNELHNCQUFzQjtBQUN0QixNQUFNRyxTQUFTO0lBQ2JDLFFBQVE7UUFDTixpQ0FBaUM7UUFDakNDLFNBQVM7UUFDVEMsWUFBWSxDQUFDQyxTQUFvQjtnQkFBRUMsYUFBYSxDQUFDLHNCQUFzQixFQUFFRCxRQUFRO1lBQUM7SUFDcEY7SUFDQUUsU0FBUztRQUNQLGtDQUFrQztRQUNsQ0osU0FBUztRQUNUQyxZQUFZLENBQUNDLFNBQW9CO2dCQUFFQyxhQUFhLENBQUMsc0JBQXNCLEVBQUVELFFBQVE7WUFBQztJQUNwRjtBQUVGO0FBRUEsYUFBYTtBQUNOLGVBQWVHLGlCQUFpQkMsTUFBNEIsRUFBRUMsSUFBVTtJQUM3RSxJQUFJLENBQUNaLHFCQUFxQjtRQUN4QmEsUUFBUUMsR0FBRyxDQUFDO1FBQ1osaUJBQWlCO1FBQ2pCLE9BQU8sSUFBSUMsUUFBUSxDQUFDQztZQUNsQixNQUFNQyxTQUFTLElBQUlDO1lBQ25CRCxPQUFPRSxNQUFNLEdBQUc7Z0JBQ2QsaUJBQWlCO2dCQUNqQkgsUUFBUUMsT0FBT0csTUFBTTtZQUN2QjtZQUNBSCxPQUFPSSxhQUFhLENBQUNUO1FBQ3ZCO0lBQ0Y7SUFFQSxNQUFNVSxRQUFRbkIsTUFBTSxDQUFDUSxPQUFPO0lBQzVCLElBQUksQ0FBQ1csT0FBTyxNQUFNLElBQUlDLE1BQU07SUFFNUIsY0FBYztJQUNkLE1BQU1DLGNBQWMsTUFBTVosS0FBS1ksV0FBVztJQUMxQyxNQUFNakIsU0FBU2tCLE9BQU9DLElBQUksQ0FBQ0YsYUFBYUcsUUFBUSxDQUFDO0lBRWpELGdCQUFnQjtJQUNoQmQsUUFBUUMsR0FBRyxDQUFDLHFCQUFxQlEsTUFBTWpCLE9BQU87SUFDOUNRLFFBQVFDLEdBQUcsQ0FBQyx3QkFBd0JRLE1BQU1oQixVQUFVLENBQUNDO0lBRXJELFlBQVk7SUFDWixNQUFNcUIsTUFBTSxNQUFNQyxNQUFNLDRDQUE0QztRQUNsRUMsUUFBUTtRQUNSQyxTQUFTO1lBQ1AsaUJBQWlCLENBQUMsTUFBTSxFQUFFL0IscUJBQXFCO1lBQy9DLGdCQUFnQjtRQUNsQjtRQUNBZ0MsTUFBTUMsS0FBS0MsU0FBUyxDQUFDO1lBQ25CN0IsU0FBU2lCLE1BQU1qQixPQUFPO1lBQ3RCOEIsT0FBT2IsTUFBTWhCLFVBQVUsQ0FBQ0M7UUFDMUI7SUFDRjtJQUNBLElBQUksQ0FBQ3FCLElBQUlRLEVBQUUsRUFBRTtRQUNYLE1BQU1DLE1BQU0sTUFBTVQsSUFBSVUsSUFBSTtRQUMxQnpCLFFBQVEwQixLQUFLLENBQUMsdUJBQXVCRjtRQUNyQyxNQUFNLElBQUlkLE1BQU0sa0NBQWtDYztJQUNwRDtJQUNBLE1BQU1HLE9BQU8sTUFBTVosSUFBSWEsSUFBSTtJQUMzQixJQUFJQyxhQUFhRjtJQUVqQixZQUFZO0lBQ1osTUFBT0UsV0FBV0MsTUFBTSxLQUFLLGVBQWVELFdBQVdDLE1BQU0sS0FBSyxTQUFVO1FBQzFFLE1BQU0sSUFBSTVCLFFBQVE2QixDQUFBQSxJQUFLQyxXQUFXRCxHQUFHO1FBQ3JDLE1BQU1FLFVBQVUsTUFBTWpCLE1BQU0sQ0FBQyx5Q0FBeUMsRUFBRWEsV0FBV0ssRUFBRSxFQUFFLEVBQUU7WUFDdkZoQixTQUFTO2dCQUFFLGlCQUFpQixDQUFDLE1BQU0sRUFBRS9CLHFCQUFxQjtZQUFDO1FBQzdEO1FBQ0EwQyxhQUFhLE1BQU1JLFFBQVFMLElBQUk7UUFDL0I1QixRQUFRQyxHQUFHLENBQUMscUJBQXFCNEIsV0FBV0MsTUFBTTtJQUNwRDtJQUNBLElBQUlELFdBQVdDLE1BQU0sS0FBSyxhQUFhO1FBQ3JDLDBCQUEwQjtRQUMxQjlCLFFBQVFDLEdBQUcsQ0FBQyx3QkFBd0I0QixXQUFXTSxNQUFNO1FBQ3JELElBQUlDLE1BQU1DLE9BQU8sQ0FBQ1IsV0FBV00sTUFBTSxHQUFHLE9BQU9OLFdBQVdNLE1BQU0sQ0FBQyxFQUFFO1FBQ2pFLE9BQU9OLFdBQVdNLE1BQU07SUFDMUI7SUFDQW5DLFFBQVEwQixLQUFLLENBQUMscUJBQXFCRyxXQUFXSCxLQUFLLElBQUlHO0lBQ3ZELE1BQU0sSUFBSW5CLE1BQU0sMEJBQTJCbUIsQ0FBQUEsV0FBV0gsS0FBSyxJQUFJLGVBQWM7QUFDL0UiLCJzb3VyY2VzIjpbIi9Vc2Vycy90dXR1L0Rlc2t0b3AvQmUgYSBEZXZlbG9wZXIvbXktYWktdG9vbC1wcm9qZWN0L3NyYy9saWIvcmVwbGljYXRlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIOivpeaWh+S7tuWwgeijheS4jlJlcGxpY2F0ZSBBUEnnmoTnnJ/lrp7kuqTkupLpgLvovpHvvIzmlK/mjIHkuI3lkIzlip/og73osIPnlKjkuI3lkIzmqKHlnotcbi8vIOmAmui/h+eOr+Wig+WPmOmHj+WuieWFqOivu+WPlkFQSSBUb2tlblxuXG5jb25zdCBSRVBMSUNBVEVfQVBJX1RPS0VOID0gcHJvY2Vzcy5lbnYuUkVQTElDQVRFX0FQSV9UT0tFTlxuXG4vLyBSZXBsaWNhdGXmqKHlnovphY3nva7vvIzmjInlip/og73ljLrliIZcbmNvbnN0IG1vZGVscyA9IHtcbiAgcmVtb3ZlOiB7XG4gICAgLy8gZmx1eC1rb250ZXh0LWFwcHMvdGV4dC1yZW1vdmFsXG4gICAgdmVyc2lvbjogXCJlMjg2MzY0MTBiZmYyYjA4M2UzOGY0ZTg1NmE1YjJiZTE3MWM4YmI2NjM2ZjUyN2IxYTllODRkZmYyOWQxYzU0XCIsXG4gICAgbW9kZWxJbnB1dDogKGJhc2U2NDogc3RyaW5nKSA9PiAoeyBpbnB1dF9pbWFnZTogYGRhdGE6aW1hZ2UvcG5nO2Jhc2U2NCwke2Jhc2U2NH1gIH0pXG4gIH0sXG4gIGVuaGFuY2U6IHtcbiAgICAvLyBmbHV4LWtvbnRleHQtYXBwcy9yZXN0b3JlLWltYWdlXG4gICAgdmVyc2lvbjogXCI4NWFlNDY1NTE2MTJiOGY3NzgzNDg4NDZiNmNlMWNlMWIzNDBlMzg0ZmUyMDYyMzk5YzBjNDEyYmUyOWUxMDdkXCIsXG4gICAgbW9kZWxJbnB1dDogKGJhc2U2NDogc3RyaW5nKSA9PiAoeyBpbnB1dF9pbWFnZTogYGRhdGE6aW1hZ2UvcG5nO2Jhc2U2NCwke2Jhc2U2NH1gIH0pXG4gIH0sXG4gIC8vIHR1bmU6IC4uLu+8iOWmguacieW+ruiwg+aooeWei+WPr+ihpeWFhe+8iVxufVxuXG4vLyDpgJrnlKhBSeWbvueJh+WkhOeQhuWHveaVsFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGNhbGxSZXBsaWNhdGVBUEkoYWN0aW9uOiAncmVtb3ZlJyB8ICdlbmhhbmNlJywgZmlsZTogRmlsZSk6IFByb21pc2U8c3RyaW5nPiB7XG4gIGlmICghUkVQTElDQVRFX0FQSV9UT0tFTikge1xuICAgIGNvbnNvbGUubG9nKCfimqDvuI8gUmVwbGljYXRlIEFQSSB0b2tlbiBub3Qgc2V0LCB1c2luZyBtb2NrIHByb2Nlc3NpbmcgZm9yIGRldmVsb3BtZW50JylcbiAgICAvLyDlvIDlj5Hnjq/looPvvJrmqKHmi5/lpITnkIbvvIzov5Tlm57ljp/lm75cbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHtcbiAgICAgIGNvbnN0IHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKClcbiAgICAgIHJlYWRlci5vbmxvYWQgPSAoKSA9PiB7XG4gICAgICAgIC8vIOi/lOWbnuWOn+WbvueahCBkYXRhIFVSTFxuICAgICAgICByZXNvbHZlKHJlYWRlci5yZXN1bHQgYXMgc3RyaW5nKVxuICAgICAgfVxuICAgICAgcmVhZGVyLnJlYWRBc0RhdGFVUkwoZmlsZSlcbiAgICB9KVxuICB9XG4gIFxuICBjb25zdCBtb2RlbCA9IG1vZGVsc1thY3Rpb25dXG4gIGlmICghbW9kZWwpIHRocm93IG5ldyBFcnJvcignVW5rbm93biBhY3Rpb24nKVxuXG4gIC8vIOivu+WPluWbvueJh+S4umJhc2U2NFxuICBjb25zdCBhcnJheUJ1ZmZlciA9IGF3YWl0IGZpbGUuYXJyYXlCdWZmZXIoKVxuICBjb25zdCBiYXNlNjQgPSBCdWZmZXIuZnJvbShhcnJheUJ1ZmZlcikudG9TdHJpbmcoJ2Jhc2U2NCcpXG5cbiAgLy8g6LCD6K+V5pel5b+X77ya5omT5Y2w5qih5Z6L5ZKM6K+35rGC5L2TXG4gIGNvbnNvbGUubG9nKCdbUmVwbGljYXRlXSDosIPnlKjmqKHlnos6JywgbW9kZWwudmVyc2lvbilcbiAgY29uc29sZS5sb2coJ1tSZXBsaWNhdGVdIOivt+axgmlucHV0OicsIG1vZGVsLm1vZGVsSW5wdXQoYmFzZTY0KSlcblxuICAvLyAxLiDliJvlu7rpooTmtYvku7vliqFcbiAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goJ2h0dHBzOi8vYXBpLnJlcGxpY2F0ZS5jb20vdjEvcHJlZGljdGlvbnMnLCB7XG4gICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgaGVhZGVyczoge1xuICAgICAgJ0F1dGhvcml6YXRpb24nOiBgVG9rZW4gJHtSRVBMSUNBVEVfQVBJX1RPS0VOfWAsXG4gICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nXG4gICAgfSxcbiAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICB2ZXJzaW9uOiBtb2RlbC52ZXJzaW9uLFxuICAgICAgaW5wdXQ6IG1vZGVsLm1vZGVsSW5wdXQoYmFzZTY0KVxuICAgIH0pXG4gIH0pXG4gIGlmICghcmVzLm9rKSB7XG4gICAgY29uc3QgZXJyID0gYXdhaXQgcmVzLnRleHQoKVxuICAgIGNvbnNvbGUuZXJyb3IoJ1tSZXBsaWNhdGVdIOWIm+W7uumihOa1i+Wksei0pTonLCBlcnIpXG4gICAgdGhyb3cgbmV3IEVycm9yKCdGYWlsZWQgdG8gY3JlYXRlIHByZWRpY3Rpb246ICcgKyBlcnIpXG4gIH1cbiAgY29uc3QgZGF0YSA9IGF3YWl0IHJlcy5qc29uKClcbiAgbGV0IHByZWRpY3Rpb24gPSBkYXRhXG5cbiAgLy8gMi4g6L2u6K+i6I635Y+W57uT5p6cXG4gIHdoaWxlIChwcmVkaWN0aW9uLnN0YXR1cyAhPT0gJ3N1Y2NlZWRlZCcgJiYgcHJlZGljdGlvbi5zdGF0dXMgIT09ICdmYWlsZWQnKSB7XG4gICAgYXdhaXQgbmV3IFByb21pc2UociA9PiBzZXRUaW1lb3V0KHIsIDE1MDApKVxuICAgIGNvbnN0IHBvbGxSZXMgPSBhd2FpdCBmZXRjaChgaHR0cHM6Ly9hcGkucmVwbGljYXRlLmNvbS92MS9wcmVkaWN0aW9ucy8ke3ByZWRpY3Rpb24uaWR9YCwge1xuICAgICAgaGVhZGVyczogeyAnQXV0aG9yaXphdGlvbic6IGBUb2tlbiAke1JFUExJQ0FURV9BUElfVE9LRU59YCB9XG4gICAgfSlcbiAgICBwcmVkaWN0aW9uID0gYXdhaXQgcG9sbFJlcy5qc29uKClcbiAgICBjb25zb2xlLmxvZygnW1JlcGxpY2F0ZV0g6L2u6K+i54q25oCBOicsIHByZWRpY3Rpb24uc3RhdHVzKVxuICB9XG4gIGlmIChwcmVkaWN0aW9uLnN0YXR1cyA9PT0gJ3N1Y2NlZWRlZCcpIHtcbiAgICAvLyDov5Tlm57lm77niYdVUkzvvIjpg6jliIbmqKHlnovkuLrmlbDnu4TvvIzpg6jliIbkuLrlrZfnrKbkuLLvvIlcbiAgICBjb25zb2xlLmxvZygnW1JlcGxpY2F0ZV0g5aSE55CG5oiQ5Yqf77yM6L6T5Ye6OicsIHByZWRpY3Rpb24ub3V0cHV0KVxuICAgIGlmIChBcnJheS5pc0FycmF5KHByZWRpY3Rpb24ub3V0cHV0KSkgcmV0dXJuIHByZWRpY3Rpb24ub3V0cHV0WzBdXG4gICAgcmV0dXJuIHByZWRpY3Rpb24ub3V0cHV0XG4gIH1cbiAgY29uc29sZS5lcnJvcignW1JlcGxpY2F0ZV0g5aSE55CG5aSx6LSlOicsIHByZWRpY3Rpb24uZXJyb3IgfHwgcHJlZGljdGlvbilcbiAgdGhyb3cgbmV3IEVycm9yKCdSZXBsaWNhdGUgQUkgZmFpbGVkOiAnICsgKHByZWRpY3Rpb24uZXJyb3IgfHwgJ1Vua25vd24gZXJyb3InKSlcbn0gIl0sIm5hbWVzIjpbIlJFUExJQ0FURV9BUElfVE9LRU4iLCJwcm9jZXNzIiwiZW52IiwibW9kZWxzIiwicmVtb3ZlIiwidmVyc2lvbiIsIm1vZGVsSW5wdXQiLCJiYXNlNjQiLCJpbnB1dF9pbWFnZSIsImVuaGFuY2UiLCJjYWxsUmVwbGljYXRlQVBJIiwiYWN0aW9uIiwiZmlsZSIsImNvbnNvbGUiLCJsb2ciLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlYWRlciIsIkZpbGVSZWFkZXIiLCJvbmxvYWQiLCJyZXN1bHQiLCJyZWFkQXNEYXRhVVJMIiwibW9kZWwiLCJFcnJvciIsImFycmF5QnVmZmVyIiwiQnVmZmVyIiwiZnJvbSIsInRvU3RyaW5nIiwicmVzIiwiZmV0Y2giLCJtZXRob2QiLCJoZWFkZXJzIiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJpbnB1dCIsIm9rIiwiZXJyIiwidGV4dCIsImVycm9yIiwiZGF0YSIsImpzb24iLCJwcmVkaWN0aW9uIiwic3RhdHVzIiwiciIsInNldFRpbWVvdXQiLCJwb2xsUmVzIiwiaWQiLCJvdXRwdXQiLCJBcnJheSIsImlzQXJyYXkiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/replicate.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/security/input-validation.ts":
/*!**********************************************!*\
  !*** ./src/lib/security/input-validation.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RateLimiter: () => (/* binding */ RateLimiter),\n/* harmony export */   containsSuspiciousContent: () => (/* binding */ containsSuspiciousContent),\n/* harmony export */   createSecurityMiddleware: () => (/* binding */ createSecurityMiddleware),\n/* harmony export */   emailSchema: () => (/* binding */ emailSchema),\n/* harmony export */   feedbackSchema: () => (/* binding */ feedbackSchema),\n/* harmony export */   fileSchema: () => (/* binding */ fileSchema),\n/* harmony export */   imageProcessingSchema: () => (/* binding */ imageProcessingSchema),\n/* harmony export */   nameSchema: () => (/* binding */ nameSchema),\n/* harmony export */   passwordSchema: () => (/* binding */ passwordSchema),\n/* harmony export */   paymentSchema: () => (/* binding */ paymentSchema),\n/* harmony export */   sanitizeInput: () => (/* binding */ sanitizeInput),\n/* harmony export */   validateFileName: () => (/* binding */ validateFileName),\n/* harmony export */   validateImageData: () => (/* binding */ validateImageData),\n/* harmony export */   validateInput: () => (/* binding */ validateInput),\n/* harmony export */   validateUrl: () => (/* binding */ validateUrl)\n/* harmony export */ });\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! zod */ \"(rsc)/./node_modules/zod/dist/esm/index.js\");\n\n// 🔐 输入验证和安全检查模块\n// 基础验证模式\nconst emailSchema = zod__WEBPACK_IMPORTED_MODULE_0__.z.string().email('无效的邮箱格式').max(254, '邮箱地址过长');\nconst passwordSchema = zod__WEBPACK_IMPORTED_MODULE_0__.z.string().min(8, '密码至少8位').max(128, '密码过长');\nconst nameSchema = zod__WEBPACK_IMPORTED_MODULE_0__.z.string().min(1, '姓名不能为空').max(100, '姓名过长');\n// 文件上传验证\nconst fileSchema = zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n    size: zod__WEBPACK_IMPORTED_MODULE_0__.z.number().max(5 * 1024 * 1024, '文件大小不能超过5MB'),\n    type: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().refine((type)=>[\n            'image/jpeg',\n            'image/png',\n            'image/webp',\n            'image/gif'\n        ].includes(type), '只支持 JPG, PNG, WEBP, GIF 格式'),\n    name: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().max(255, '文件名过长')\n});\n// 图片处理请求验证\nconst imageProcessingSchema = zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n    action: zod__WEBPACK_IMPORTED_MODULE_0__.z[\"enum\"]([\n        'remove',\n        'enhance'\n    ], {\n        errorMap: ()=>({\n                message: '无效的操作类型'\n            })\n    }),\n    file: fileSchema\n});\n// 用户反馈验证\nconst feedbackSchema = zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n    feedback: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().min(1, '反馈内容不能为空').max(1000, '反馈内容不能超过1000字符').refine((text)=>!containsSuspiciousContent(text), '反馈内容包含不当内容')\n});\n// 支付验证\nconst paymentSchema = zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n    amount: zod__WEBPACK_IMPORTED_MODULE_0__.z.number().positive('金额必须为正数').max(10000, '金额过大'),\n    currency: zod__WEBPACK_IMPORTED_MODULE_0__.z[\"enum\"]([\n        'USD',\n        'EUR',\n        'CNY'\n    ], {\n        errorMap: ()=>({\n                message: '不支持的货币类型'\n            })\n    }),\n    productId: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().min(1, '产品ID不能为空').max(100, '产品ID过长'),\n    userId: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().uuid('无效的用户ID')\n});\n// 🔍 可疑内容检测\nfunction containsSuspiciousContent(text) {\n    const suspiciousPatterns = [\n        // SQL注入模式\n        /(\\b(union|select|insert|update|delete|drop|create|alter)\\b)/i,\n        /(\\b(script|javascript|vbscript|expression)\\b)/i,\n        /(\\b(onload|onerror|onclick|onmouseover)\\b)/i,\n        // XSS模式\n        /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\n        /javascript:/gi,\n        /vbscript:/gi,\n        /on\\w+\\s*=/gi,\n        // 命令注入模式\n        /(\\b(cmd|command|exec|system|shell)\\b)/i,\n        /[;&|`$(){}[\\]]/g,\n        // 路径遍历\n        /\\.\\.\\//g,\n        /\\.\\.\\\\/g,\n        // 特殊字符过多\n        /[<>\\\"'&]{3,}/g\n    ];\n    return suspiciousPatterns.some((pattern)=>pattern.test(text));\n}\n// 🔍 输入清理\nfunction sanitizeInput(input) {\n    return input.trim().replace(/[<>\\\"'&]/g, (match)=>{\n        const entities = {\n            '<': '&lt;',\n            '>': '&gt;',\n            '\"': '&quot;',\n            \"'\": '&#x27;',\n            '&': '&amp;'\n        };\n        return entities[match] || match;\n    }).substring(0, 1000) // 限制长度\n    ;\n}\n// 🔍 文件名安全验证\nfunction validateFileName(filename) {\n    const dangerousChars = /[<>:\"/\\\\|?*\\x00-\\x1f]/g;\n    const reservedNames = /^(CON|PRN|AUX|NUL|COM[1-9]|LPT[1-9])(\\.|$)/i;\n    return !dangerousChars.test(filename) && !reservedNames.test(filename) && filename.length <= 255 && !filename.includes('..');\n}\n// 🔍 URL安全验证\nfunction validateUrl(url) {\n    try {\n        const urlObj = new URL(url);\n        const allowedProtocols = [\n            'http:',\n            'https:'\n        ];\n        const allowedDomains = [\n            'fluxkontext.space',\n            'replicate.com',\n            'api.replicate.com',\n            'fal.ai',\n            'supabase.co'\n        ];\n        return allowedProtocols.includes(urlObj.protocol) && allowedDomains.some((domain)=>urlObj.hostname.endsWith(domain));\n    } catch  {\n        return false;\n    }\n}\n// 🔍 图片数据验证\nfunction validateImageData(data) {\n    const bytes = new Uint8Array(data);\n    // 检查文件大小\n    if (bytes.length === 0 || bytes.length > 5 * 1024 * 1024) {\n        return false;\n    }\n    // 检查文件头\n    const headers = {\n        jpeg: [\n            0xFF,\n            0xD8,\n            0xFF\n        ],\n        png: [\n            0x89,\n            0x50,\n            0x4E,\n            0x47\n        ],\n        webp: [\n            0x52,\n            0x49,\n            0x46,\n            0x46\n        ],\n        gif: [\n            0x47,\n            0x49,\n            0x46,\n            0x38\n        ]\n    };\n    const isValidHeader = Object.values(headers).some((header)=>header.every((byte, index)=>bytes[index] === byte));\n    return isValidHeader;\n}\n// 🔍 速率限制检查\nclass RateLimiter {\n    checkLimit(key, limit, windowMs) {\n        const now = Date.now();\n        const record = this.requests.get(key);\n        if (!record || now > record.resetTime) {\n            this.requests.set(key, {\n                count: 1,\n                resetTime: now + windowMs\n            });\n            return true;\n        }\n        if (record.count >= limit) {\n            return false;\n        }\n        record.count++;\n        return true;\n    }\n    clear() {\n        this.requests.clear();\n    }\n    constructor(){\n        this.requests = new Map();\n    }\n}\n// 🔍 通用验证函数\nfunction validateInput(data, schema) {\n    try {\n        const result = schema.safeParse(data);\n        if (result.success) {\n            return {\n                isValid: true,\n                errors: [],\n                sanitizedData: result.data\n            };\n        } else {\n            return {\n                isValid: false,\n                errors: result.error.errors.map((err)=>err.message)\n            };\n        }\n    } catch (error) {\n        return {\n            isValid: false,\n            errors: [\n                '验证过程中发生错误'\n            ]\n        };\n    }\n}\n// 🔍 安全检查中间件\nfunction createSecurityMiddleware() {\n    return {\n        validateRequest: (req)=>{\n            const headers = req.headers;\n            // 检查Content-Type\n            const contentType = headers.get('content-type');\n            if (contentType && !contentType.includes('application/json') && !contentType.includes('multipart/form-data')) {\n                return {\n                    isValid: false,\n                    error: '不支持的Content-Type'\n                };\n            }\n            // 检查User-Agent\n            const userAgent = headers.get('user-agent');\n            if (!userAgent || userAgent.length > 500) {\n                return {\n                    isValid: false,\n                    error: '无效的User-Agent'\n                };\n            }\n            return {\n                isValid: true\n            };\n        },\n        validateFileUpload: (file)=>{\n            const validation = validateInput(file, fileSchema);\n            if (!validation.isValid) {\n                return {\n                    isValid: false,\n                    errors: validation.errors\n                };\n            }\n            if (!validateFileName(file.name)) {\n                return {\n                    isValid: false,\n                    errors: [\n                        '文件名包含危险字符'\n                    ]\n                };\n            }\n            return {\n                isValid: true\n            };\n        }\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/security/input-validation.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/utils/error-handler.ts":
/*!****************************************!*\
  !*** ./src/lib/utils/error-handler.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthenticationError: () => (/* binding */ AuthenticationError),\n/* harmony export */   AuthorizationError: () => (/* binding */ AuthorizationError),\n/* harmony export */   FileUploadError: () => (/* binding */ FileUploadError),\n/* harmony export */   RateLimitError: () => (/* binding */ RateLimitError),\n/* harmony export */   ValidationError: () => (/* binding */ ValidationError),\n/* harmony export */   createErrorResponse: () => (/* binding */ createErrorResponse),\n/* harmony export */   createSecurityMiddleware: () => (/* binding */ createSecurityMiddleware),\n/* harmony export */   logSecurityEvent: () => (/* binding */ logSecurityEvent),\n/* harmony export */   secureResponse: () => (/* binding */ secureResponse),\n/* harmony export */   withErrorHandling: () => (/* binding */ withErrorHandling)\n/* harmony export */ });\n// 🔐 统一错误处理和安全日志模块\n// 生成请求ID\nfunction generateRequestId() {\n    return `req_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n}\n// 获取用户代理\nfunction getUserAgent(req) {\n    if (req) {\n        return req.headers.get('user-agent') || 'unknown';\n    }\n    return 'unknown';\n}\n// 从请求中获取客户端IP\nasync function getClientIpFromRequest(req) {\n    if (!req) return 'unknown';\n    try {\n        const forwardedFor = req.headers.get('x-forwarded-for');\n        const realIp = req.headers.get('x-real-ip');\n        const cfConnectingIp = req.headers.get('cf-connecting-ip');\n        const xClientIp = req.headers.get('x-client-ip');\n        if (cfConnectingIp) return cfConnectingIp;\n        if (realIp) return realIp;\n        if (forwardedFor) return forwardedFor.split(',')[0].trim();\n        if (xClientIp) return xClientIp;\n        return 'unknown';\n    } catch  {\n        return 'unknown';\n    }\n}\n// 创建统一错误响应\nfunction createErrorResponse(error, status = 500, req) {\n    const isDev = \"development\" === 'development';\n    const errorMessage = typeof error === 'string' ? error : error.message;\n    // 记录安全事件\n    logSecurityEvent('error_response', {\n        status,\n        error: isDev ? errorMessage : 'Internal server error',\n        ip: 'unknown',\n        userAgent: getUserAgent(req),\n        timestamp: new Date().toISOString()\n    });\n    return Response.json({\n        error: isDev ? errorMessage : 'Internal server error',\n        status,\n        timestamp: new Date().toISOString(),\n        requestId: generateRequestId()\n    }, {\n        status\n    });\n}\n// 记录安全事件\nfunction logSecurityEvent(event, details) {\n    const logData = {\n        event,\n        timestamp: new Date().toISOString(),\n        environment: \"development\" || 0,\n        ...details\n    };\n    // 开发环境输出到控制台\n    if (true) {\n        console.log(`🔒 Security Event: ${event}`, logData);\n    } else {}\n}\n// 验证错误\nclass ValidationError extends Error {\n    constructor(message, field){\n        super(message), this.field = field;\n        this.name = 'ValidationError';\n    }\n}\n// 认证错误\nclass AuthenticationError extends Error {\n    constructor(message = 'Authentication required'){\n        super(message);\n        this.name = 'AuthenticationError';\n    }\n}\n// 权限错误\nclass AuthorizationError extends Error {\n    constructor(message = 'Insufficient permissions'){\n        super(message);\n        this.name = 'AuthorizationError';\n    }\n}\n// 速率限制错误\nclass RateLimitError extends Error {\n    constructor(message = 'Rate limit exceeded'){\n        super(message);\n        this.name = 'RateLimitError';\n    }\n}\n// 文件上传错误\nclass FileUploadError extends Error {\n    constructor(message, file){\n        super(message), this.file = file;\n        this.name = 'FileUploadError';\n    }\n}\n// 安全检查中间件\nfunction createSecurityMiddleware() {\n    return {\n        // 验证请求头\n        validateHeaders: (req)=>{\n            const headers = req.headers;\n            // 检查Content-Type\n            const contentType = headers.get('content-type');\n            if (contentType && !contentType.includes('application/json') && !contentType.includes('multipart/form-data')) {\n                return {\n                    isValid: false,\n                    error: '不支持的Content-Type'\n                };\n            }\n            // 检查User-Agent\n            const userAgent = headers.get('user-agent');\n            if (!userAgent || userAgent.length > 500) {\n                return {\n                    isValid: false,\n                    error: '无效的User-Agent'\n                };\n            }\n            // 检查请求大小\n            const contentLength = headers.get('content-length');\n            if (contentLength && parseInt(contentLength) > 10 * 1024 * 1024) {\n                return {\n                    isValid: false,\n                    error: '请求体过大'\n                };\n            }\n            return {\n                isValid: true\n            };\n        },\n        // 记录请求\n        logRequest: async (req, response)=>{\n            const url = new URL(req.url);\n            const method = req.method;\n            const ip = await getClientIpFromRequest(req);\n            const userAgent = getUserAgent(req);\n            // 记录可疑请求\n            const suspiciousPatterns = [\n                /\\.\\.\\//,\n                /<script/i,\n                /union.*select/i,\n                /javascript:/i,\n                /on\\w+\\s*=/i // 事件处理器\n            ];\n            const isSuspicious = suspiciousPatterns.some((pattern)=>pattern.test(url.pathname) || pattern.test(url.search) || pattern.test(userAgent));\n            if (isSuspicious) {\n                logSecurityEvent('suspicious_request', {\n                    method,\n                    path: url.pathname,\n                    query: url.search,\n                    ip,\n                    userAgent,\n                    status: response?.status || 'unknown'\n                });\n            }\n        }\n    };\n}\n// 错误处理装饰器\nfunction withErrorHandling(handler) {\n    return async (...args)=>{\n        try {\n            return await handler(...args);\n        } catch (error) {\n            // 记录错误\n            logSecurityEvent('unhandled_error', {\n                error: error instanceof Error ? error.message : String(error),\n                stack: error instanceof Error ? error.stack : undefined\n            });\n            // 重新抛出错误\n            throw error;\n        }\n    };\n}\n// 安全响应包装器\nfunction secureResponse(response, req) {\n    // 添加安全头\n    response.headers.set('X-Content-Type-Options', 'nosniff');\n    response.headers.set('X-Frame-Options', 'DENY');\n    response.headers.set('X-XSS-Protection', '1; mode=block');\n    return response;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/utils/error-handler.ts\n");

/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "../app-render/work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "assert":
/*!*************************!*\
  !*** external "assert" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("assert");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("buffer");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("events");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("https");

/***/ }),

/***/ "net":
/*!**********************!*\
  !*** external "net" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("net");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

"use strict";
module.exports = require("punycode");

/***/ }),

/***/ "querystring":
/*!******************************!*\
  !*** external "querystring" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("querystring");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ "tls":
/*!**********************!*\
  !*** external "tls" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("tls");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("util");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/next-auth","vendor-chunks/@babel","vendor-chunks/@supabase","vendor-chunks/tr46","vendor-chunks/jose","vendor-chunks/openid-client","vendor-chunks/whatwg-url","vendor-chunks/oauth","vendor-chunks/preact","vendor-chunks/yallist","vendor-chunks/preact-render-to-string","vendor-chunks/cookie","vendor-chunks/webidl-conversions","vendor-chunks/oidc-token-hash","vendor-chunks/@panva","vendor-chunks/zod"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fremove-watermark%2Froute&page=%2Fapi%2Fremove-watermark%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fremove-watermark%2Froute.ts&appDir=%2FUsers%2Ftutu%2FDesktop%2FBe%20a%20Developer%2Fmy-ai-tool-project%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Ftutu%2FDesktop%2FBe%20a%20Developer%2Fmy-ai-tool-project&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();